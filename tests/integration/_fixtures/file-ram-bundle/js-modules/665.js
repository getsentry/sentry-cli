__d((function(g,r,i,a,m,_e,d){Object.defineProperty(_e,"__esModule",{value:!0}),_e.ReactNativeErrorHandlers=void 0;var e=r(d[0])(r(d[1])),n=r(d[0])(r(d[2])),t=(function(){function t(n){(0,e.default)(this,t),this.name=t.id,this._options=Object.assign({onerror:!0,onunhandledrejection:!0,patchGlobalPromise:!0},n)}return(0,n.default)(t,[{key:"setupOnce",value:function(){this._handleUnhandledRejections(),this._handleOnError()}},{key:"_handleUnhandledRejections",value:function(){this._options.onunhandledrejection&&(this._options.patchGlobalPromise&&this._polyfillPromise(),this._attachUnhandledRejectionHandler(),this._checkPromiseAndWarn())}},{key:"_polyfillPromise",value:function(){var e=r(d[3]).polyfillGlobal,n=this._getPromisePolyfill();r(d[4]),r(d[5]),e('Promise',(function(){return n}))}},{key:"_getPromisePolyfill",value:function(){return r(d[6])}},{key:"_attachUnhandledRejectionHandler",value:function(){var e=r(d[7]),n=function(e){console.warn(`Promise Rejection Handled (id: ${e})\nThis means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection (id: ${e}):"`)};e.enable({allRejections:!0,onUnhandled:function(e,n){(0,r(d[8]).getCurrentHub)().captureException(n,{data:{id:e},originalException:n})},onHandled:function(e){n(e)}})}},{key:"_checkPromiseAndWarn",value:function(){try{var e=r(d[9]),n=r(d[6]),t=this._getPromisePolyfill();e!==n&&r(d[10]).logger.warn("You appear to have multiple versions of the \"promise\" package installed. This may cause unexpected behavior like undefined `Promise.allSettled`. Please install the `promise` package manually using the exact version as the React Native package. See https://docs.sentry.io/platforms/react-native/troubleshooting/ for more details."),t!==r(d[11]).RN_GLOBAL_OBJ.Promise?r(d[10]).logger.warn("Unhandled promise rejections will not be caught by Sentry. See https://docs.sentry.io/platforms/react-native/troubleshooting/ for more details."):r(d[10]).logger.log('Unhandled promise rejections will be caught by Sentry.')}catch(e){r(d[10]).logger.warn("Unhandled promise rejections will not be caught by Sentry. See https://docs.sentry.io/platforms/react-native/troubleshooting/ for more details.")}}},{key:"_handleOnError",value:function(){var e=this;if(this._options.onerror){var n=!1,t=r(d[11]).RN_GLOBAL_OBJ.ErrorUtils;if(!t)return void r(d[10]).logger.warn('ErrorUtils not found. Can be caused by different environment for example react-native-web.');var o=t.getGlobalHandler&&t.getGlobalHandler();t.setGlobalHandler((function(t,l){return(0,r(d[12]).__awaiter)(e,void 0,void 0,(function*(){if(l&&!0){if(n)return void r(d[10]).logger.log('Encountered multiple fatals in a row. The latest:',t);n=!0}var e=(0,r(d[8]).getCurrentHub)(),s=e.getClient(),c=e.getScope();if(!s)return r(d[10]).logger.error('Sentry client is missing, the error event might be lost.',t),void o(t,l);var u=s.getOptions(),h={originalException:t,attachments:null==c?void 0:c.getAttachments()},f=yield s.eventFromException(t,h);l&&(f.level='fatal',(0,r(d[10]).addExceptionMechanism)(f,{handled:!1,type:'onerror'})),e.captureEvent(f,h),s.flush(u.shutdownTimeout||2e3).then((function(){o(t,l)}))}))}))}}}]),t})();_e.ReactNativeErrorHandlers=t,t.id='ReactNativeErrorHandlers'}),665,[598,451,452,86,666,668,669,670,483,87,426,605,602]);