__d((function(g,r,i,_a,m,e,d){Object.defineProperty(e,"__esModule",{value:!0}),e.default=e.PerformanceObserverEntryList=void 0,e.warnNoNativePerformanceObserver=p;var t=r(d[0])(r(d[1])),n=r(d[0])(r(d[2])),a=r(d[0])(r(d[3])),o=r(d[0])(r(d[4])),s=r(d[0])(r(d[5])),u=r(d[0])(r(d[6])),l=(function(){function t(n){(0,a.default)(this,t),this._entries=n}return(0,o.default)(t,[{key:"getEntries",value:function(){return this._entries}},{key:"getEntriesByType",value:function(t){return this._entries.filter((function(n){return n.entryType===t}))}},{key:"getEntriesByName",value:function(t,n){return void 0===n?this._entries.filter((function(n){return n.name===t})):this._entries.filter((function(a){return a.name===t&&a.entryType===n}))}}]),t})();e.PerformanceObserverEntryList=l;var f=new Map,y=new Map,v=!1,c=function(){var t;if(u.default){var a=u.default.popPendingEntries(),o=null!=(t=null==a?void 0:a.entries)?t:[],s=null==a?void 0:a.droppedEntriesCount;if(0!==o.length){var f=o.map(r(d[7]).rawToPerformanceEntry),v=function(t,n){var a=f.filter((function(n){if(!t.entryTypes.has(n.entryType))return!1;var a=t.entryTypes.get(n.entryType);return n.duration>=(null!=a?a:0)}));t.callback(new l(a),n,s)};for(var c of y.entries()){var p=(0,n.default)(c,2),h=p[0];v(p[1],h)}}}};function p(){(0,s.default)('missing-native-performance-observer','Missing native implementation of PerformanceObserver')}function h(){var t=Array.from(y.values()).map((function(t){return t.entryTypes})).reduce((function(t,n){return T(t,n)}),new Map);for(var a of t){var o=(0,n.default)(a,2),s=o[0],l=o[1];null==u.default||u.default.setDurationThreshold((0,r(d[7]).performanceEntryTypeToRaw)(s),null!=l?l:0)}}var b=(function(){function n(t){(0,a.default)(this,n),this._callback=t}return(0,o.default)(n,[{key:"observe",value:function(n){var a;if(u.default){var o;this._validateObserveOptions(n),n.entryTypes?(this._type='multiple',o=new Map(n.entryTypes.map((function(t){return[t,void 0]})))):(this._type='single',o=new Map([[n.type,n.durationThreshold]]));var s=null==(a=y.get(this))?void 0:a.entryTypes,l=s?T(o,s):o;if(!s||s.size!==l.size){y.set(this,{callback:this._callback,entryTypes:l}),v||(u.default.setOnPerformanceEntryCallback(c),v=!0);var b,w,E=s?(b=new Set(o.keys()),w=new Set(s.keys()),new Set((0,t.default)(b).filter((function(t){return!w.has(t)})))):new Set(o.keys());for(var O of E){var k;if(!f.has(O)){var _=(0,r(d[7]).performanceEntryTypeToRaw)(O);u.default.startReporting(_)}f.set(O,(null!=(k=f.get(O))?k:0)+1)}h()}}else p()}},{key:"disconnect",value:function(){if(u.default){var t=y.get(this);if(t){for(var n of t.entryTypes.keys()){var a,o=null!=(a=f.get(n))?a:0;1===o?(f.delete(n),u.default.stopReporting((0,r(d[7]).performanceEntryTypeToRaw)(n))):0!==o&&f.set(n,o-1)}y.delete(this),0===y.size&&(u.default.setOnPerformanceEntryCallback(void 0),v=!1),h()}}else p()}},{key:"_validateObserveOptions",value:function(t){var n=t.type,a=t.entryTypes,o=t.durationThreshold;if(!n&&!a)throw new TypeError("Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and type arguments.");if(a&&n)throw new TypeError("Failed to execute 'observe' on 'PerformanceObserver': An observe() call must include either entryTypes or type arguments.");if('multiple'===this._type&&n)throw new Error("Failed to execute 'observe' on 'PerformanceObserver': This observer has performed observe({entryTypes:...}, therefore it cannot perform observe({type:...})");if('single'===this._type&&a)throw new Error("Failed to execute 'observe' on 'PerformanceObserver': This PerformanceObserver has performed observe({type:...}, therefore it cannot perform observe({entryTypes:...})");if(a&&void 0!==o)throw new TypeError("Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and durationThreshold arguments.")}}]),n})();function T(t,a){var o=new Map;for(var s of t){var u,l=(0,n.default)(s,2),f=l[0],y=l[1];if(a.has(f))o.set(f,Math.min(null!=y?y:0,null!=(u=a.get(f))?u:0));else o.set(f,y)}return o}e.default=b,b.supportedEntryTypes=Object.freeze(['mark','measure','event'])}),69,[9,12,28,18,19,66,68,70]);