__d((function(g,r,i,a,m,e,d){var n,t=r(d[0])(r(d[1])),o=r(d[0])(r(d[2])),s=r(d[0])(r(d[3])),u=r(d[0])(r(d[4])),c=r(d[0])(r(d[5])),f=r(d[0])(r(d[6])),l=r(d[0])(r(d[7])),p=r(d[0])(r(d[8])),h=r(d[0])(r(d[9])),y={},k=1,v={},C=new Map,b=new Map,A=function(n){return n()},R=!1,T={setWrapperComponentProvider:function(t){n=t},enableArchitectureIndicator:function(n){R=n},registerConfig:function(n){n.forEach((function(n){n.run?T.registerRunnable(n.appKey,n.run):((0,h.default)(null!=n.component,"AppRegistry.registerConfig(...): Every config is expected to set either `run` or `component`, but `%s` has neither.",n.appKey),T.registerComponent(n.appKey,n.component,n.section))}))},registerComponent:function(t,o,u){var c=(0,s.default)();return y[t]={componentProvider:o,run:function(s,u){var f,l=(null==(f=s.initialProps)?void 0:f.concurrentRoot)||s.concurrentRoot;(0,p.default)(A(o,c),s.initialProps,s.rootTag,n&&n(s),s.fabric,R,c,'LogBox'===t,t,(0,r(d[10]).coerceDisplayMode)(u),l)}},u&&(v[t]=y[t]),t},registerRunnable:function(n,t){return y[n]={run:t},n},registerSection:function(n,t){T.registerComponent(n,t,!0)},getAppKeys:function(){return Object.keys(y)},getSectionKeys:function(){return Object.keys(v)},getSections:function(){return Object.assign({},v)},getRunnable:function(n){return y[n]},getRegistry:function(){return{sections:T.getSectionKeys(),runnables:Object.assign({},y)}},setComponentProviderInstrumentationHook:function(n){A=n},runApplication:function(n,t,s){if('LogBox'!==n){var f='Running "'+n;(0,u.default)(f),o.default.addSource('AppRegistry.runApplication'+k++,(function(){return f}))}(0,h.default)(y[n]&&y[n].run,`"${n}" has not been registered. This can happen if:\n* Metro (the local dev server) is run from the wrong folder. Check if Metro is running, stop it and restart it in the current project.\n* A module failed to load due to an error and \`AppRegistry.registerComponent\` wasn't called.`),c.default.setActiveScene({name:n}),y[n].run(t,s)},setSurfaceProps:function(n,t,s){if('LogBox'!==n){var c='Updating props for Surface "'+n+'" with '+JSON.stringify(t);(0,u.default)(c),o.default.addSource('AppRegistry.setSurfaceProps'+k++,(function(){return c}))}(0,h.default)(y[n]&&y[n].run,`"${n}" has not been registered. This can happen if:\n* Metro (the local dev server) is run from the wrong folder. Check if Metro is running, stop it and restart it in the current project.\n* A module failed to load due to an error and \`AppRegistry.registerComponent\` wasn't called.`),y[n].run(t,s)},unmountApplicationComponentAtRootTag:function(n){(0,r(d[11]).unmountComponentAtNodeAndRemoveContainer)(n)},registerHeadlessTask:function(n,t){this.registerCancellableHeadlessTask(n,t,(function(){return function(){}}))},registerCancellableHeadlessTask:function(n,t,o){C.has(n)&&console.warn(`registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${n}'`),C.set(n,t),b.set(n,o)},startHeadlessTask:function(n,t,o){var s=C.get(t);if(!s)return console.warn(`No task registered for key ${t}`),void(l.default&&l.default.notifyTaskFinished(n));s()(o).then((function(){l.default&&l.default.notifyTaskFinished(n)})).catch((function(t){console.error(t),l.default&&t instanceof f.default&&l.default.notifyTaskRetry(n).then((function(t){t||l.default.notifyTaskFinished(n)}))}))},cancelHeadlessTask:function(n,t){var o=b.get(t);if(!o)throw new Error(`No task canceller registered for key '${t}'`);o()()}};!0!==g.RN$Bridgeless&&(t.default.registerCallableModule('AppRegistry',T),T.registerComponent('LogBox',(function(){return function(){return null}}))),m.exports=T}),146,[9,32,147,110,111,151,152,153,154,26,201,49]);