```
$ sentry-cli upload-proguard --help
? success
sentry-cli[EXE]-upload-proguard 
Upload ProGuard mapping files to a project.

USAGE:
    sentry-cli[EXE] upload-proguard [OPTIONS] [PATH]...

ARGS:
    <PATH>...    The path to the mapping files.

OPTIONS:
        --android-manifest <PATH>
            Read version and version code from an Android manifest file.

        --app-id <APP_ID>
            Optionally associate the mapping files with an application ID.
            If you have multiple apps in one sentry project, you can then easily tell them apart.

        --auth-token <AUTH_TOKEN>
            Use the given Sentry auth token.

    -h, --help
            Print help information

        --header <KEY:VALUE>
            Custom headers that should be attached to all requests
            in key:value format.

        --log-level <LOG_LEVEL>
            Set the log output verbosity. [possible values: trace, debug, info, warn, error]

        --no-reprocessing
            Do not trigger reprocessing after upload.

        --no-upload
            Disable the actual upload.
            This runs all steps for the processing but does not trigger the upload (this also
            automatically disables reprocessing).  This is useful if you just want to verify the
            mapping files and write the proguard UUIDs into a properties file.

    -o, --org <ORG>
            The organization slug

    -p, --project <PROJECT>
            The project slug.

        --platform <PLATFORM>
            Optionally defines the platform for the app association. [defaults to 'android']

        --quiet
            Do not print any output while preserving correct exit code. This flag is currently
            implemented only for selected subcommands. [aliases: silent]

        --require-one
            Requires at least one file to upload or the command will error.

    -u, --uuid <UUID>
            Explicitly override the UUID of the mapping file with another one.
            This should be used with caution as it means that you can upload multiple mapping files
            if you don't take care.  This however can be useful if you have a build process in which
            you need to know the UUID of the proguard file before it was created.  If you upload a
            file with a forced UUID you can only upload a single proguard file.

        --version <VERSION>
            Optionally associate the mapping files with a human readable version.
            This helps you understand which ProGuard files go with which version of your app.

        --version-code <VERSION_CODE>
            Optionally associate the mapping files with a version code.
            This helps you understand which ProGuard files go with which version of your app.

        --write-properties <PATH>
            Write the UUIDs for the processed mapping files into the given properties file.

```
