```
$ sentry-cli monitors run --help
? success
Wraps a command

Usage: sentry-cli[EXE] monitors run [OPTIONS] <monitor-slug> -- <ARGS>...

Arguments:
  <monitor-slug>  The monitor slug.
  <ARGS>...       

Options:
  -e, --environment <environment>
          Specify the environment of the monitor. [default: production]
      --header <KEY:VALUE>
          Custom headers that should be attached to all requests
          in key:value format.
  -s, --schedule <schedule>
          Configure the cron monitor with the given schedule (crontab format). Enclose the schedule
          in quotes to ensure your command line environment parses the argument correctly.
      --check-in-margin <checkin_margin>
          The allowed margin of minutes after the expected check-in time that the monitor will not
          be considered missed for. Requires --schedule.
      --max-runtime <max_runtime>
          The allowed duration in minutes that the monitor may be in progress for before being
          considered failed due to timeout. Requires --schedule.
      --log-level <LOG_LEVEL>
          Set the log output verbosity. [possible values: trace, debug, info, warn, error]
      --timezone <timezone>
          A tz database string (e.g. "Europe/Vienna") representing the monitor's execution
          schedule's timezone. Requires --schedule.
      --failure-issue-threshold <failure_issue_threshold>
          The number of consecutive missed or error check-ins that trigger an issue. Requires
          --schedule.
      --quiet
          Do not print any output while preserving correct exit code. This flag is currently
          implemented only for selected subcommands. [aliases: silent]
      --recovery-threshold <recovery_threshold>
          The number of consecutive successful check-ins that resolve an issue. Requires --schedule.
  -h, --help
          Print help

```
