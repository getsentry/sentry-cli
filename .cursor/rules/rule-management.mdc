---
description: Instructions for maintaining and updating Cursor rules for sentry-cli
alwaysApply: true
---

# Rule Management Guidelines

## Proactive Rule Updates

When conversations include new context that could be **generally applicable** to sentry-cli development, you should update the relevant rule files in `.cursor/rules/`.

### What to Capture

- **Development patterns** that emerge during problem-solving
- **Best practices** discovered or discussed
- **Common pitfalls** and how to avoid them
- **Workflow improvements** that benefit the team
- **Architecture decisions** that affect future development
- **Tool configurations** or setup requirements
- **Testing strategies** and patterns

### What NOT to Capture

- **Task-specific information** (one-time fixes, specific bug solutions)
- **Temporary workarounds** or experimental approaches
- **Personal preferences** that don't reflect team standards
- **Implementation details** for specific features

## Update Strategy

1. **Identify the appropriate rule file**:

   - `sentry-cli-project.mdc` - General project context
   - `rust-development.mdc` - Rust-specific patterns
   - `javascript-development.mdc` - JS/TS patterns
   - `cicd-patterns.mdc` - CI/CD workflows

2. **Update incrementally**: Add new insights to existing sections or create new sections as needed

3. **Maintain clarity**: Keep rules focused, actionable, and well-organized

4. **Preserve existing context**: Don't remove valuable information unless it's outdated

5. **Don't repeat yourself**: Do not add redundant information to a rule.

## When to Update Rules

Update rules when you encounter:

- New patterns that developers should follow consistently
- Solutions to common problems that could help future development
- Clarifications about existing practices
- Tool usage patterns that improve workflow
- Architecture insights that affect code organization

Remember: Rules should capture knowledge that helps maintain consistency and quality across the sentry-cli codebase.
