language: generic
dist: trusty
services:
  - docker

branches:
  only:
  - master

cache:
  directories:
    - "node_modules"
    - $HOME/.cargo
    - $TRAVIS_BUILD_DIR/target

matrix:
  include:
    # Linux 32-bit statically linked binary
    - os: linux
      sudo: required
      env:
        - TARGET=i686-unknown-linux-musl
        - DOCKER_IMAGE=messense/rust-musl-cross:i686-musl
        - ARTIFACT_SUFFIX=Linux-i686
      script: bash scripts/build-in-docker.sh

    # Linux 64-bit statically linked binary
    - os: linux
      sudo: required
      env:
        - TARGET=x86_64-unknown-linux-musl
        - DOCKER_IMAGE=messense/rust-musl-cross:x86_64-musl
        - ARTIFACT_SUFFIX=Linux-x86_64
      script: bash scripts/build-in-docker.sh

    # Build on older OS X for more portable binaries
    - os: osx
      osx_image: xcode8
      language: rust
      env:
        - TARGET=x86_64-apple-darwin
        - ARTIFACT_SUFFIX=Darwin-x86_64
      script: cargo build --release --locked

    # Test minimum js
    - os: linux
      language: node_js
      node_js: "4"
      install: true
      env: SENTRYCLI_LOCAL_CDNURL="http://localhost:8999/"
      script: npm install && npm test

    # Test latest js
    - os: linux
      language: node_js
      node_js: "8"
      install: true
      env: SENTRYCLI_LOCAL_CDNURL="http://localhost:8999/"
      script: npm install && npm test

    # Build the @sentry/cli NPM package
    - os: linux
      language: node_js
      node_js: "8"
      install: true
      before_deploy: mkdir -p dist && mv *.tgz dist/package.tgz
      env: TARGET=npm
      script: npm pack

after_success:
  - |
      if [ -n "$ARTIFACT_SUFFIX" ]; then
        npm install -g @zeus-ci/cli
        zeus upload -t "application/octet-stream" \
                    -n "sentry-cli-${ARTIFACT_SUFFIX}" \
                    target/release/sentry-cli target/*/release/sentry-cli
      fi
