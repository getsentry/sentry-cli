name: CI

on:
  push:
    branches:
      - master
      - 1.x
      - release/**

  pull_request:

env:
  RUSTFLAGS: -Dwarnings

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # pin@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy, rustfmt
          override: true

      - uses: swatinem/rust-cache@81d053bdb0871dcd3f10763c8cc60d0adc41762b # pin@v1
        with:
          key: ${{ github.job }}

      - name: Run Rustfmt
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # pin@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run Clippy
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # pin@v1
        with:
          command: clippy
          args: --workspace --all-features --tests -- -D clippy::all

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # pin@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: swatinem/rust-cache@81d053bdb0871dcd3f10763c8cc60d0adc41762b # pin@v1
        with:
          key: ${{ github.job }}

      - name: Run Cargo Tests
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # pin@v1
        with:
          command: test
          args: --all

  test_node:
    strategy:
      fail-fast: false
      matrix:
        node-version: [10.x, 12.x, 14.x, 16.x, 18.x]

    name: Test Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install
        env:
          SENTRYCLI_LOCAL_CDNURL: 'http://localhost:8999/'

      - run: npm test

  test_install:
    strategy:
      fail-fast: false
      matrix:
        node-version: [10.x, 12.x, 14.x, 16.x, 18.x]

    name: Test install script on Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          path: sentry-cli-dep

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup empty test app
        run:  mkdir test-app && cd test-app && npm init --yes

      - name: Install @sentry/cli
        run: npm install ../sentry-cli-dep --install-links
        working-directory: ./test-app

      - name: Ensure binary can be called from paths
        run: |
          node_modules/.bin/sentry-cli help
          node_modules/@sentry/cli/sentry-cli help
        working-directory: ./test-app

      - name: Install @sentry/cli globally
        run: npm install ./sentry-cli-dep --install-links -g

      - name: Ensure binary is installed globally
        run: sentry-cli help

